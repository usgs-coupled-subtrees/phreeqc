DATABASE ../database/wateq4f.dat
RATES

CaX2       # species 2
-start

# List of all species and equivalents
10 DATA 5, "NaX", 1, "CaX2", 2, "MgX2", 2, "KX", 1, "HX", 1
# number of species, name of species, log K, number of species in reaction, reaction
20 DATA 2, "CaX2", 0.8, 2, "Na+", 2, "Ca+2", -1
30 krate = PARM(1)/(24*3600) 

100 REM  Calculate sites and log_master_fraction
110 RESTORE 10
120 READ nspec
130 sites = 0
140 FOR i = 1 to nspec
150   READ spec$, equiv
170   sites = sites + KIN(spec$)*equiv
180   PUT(equiv, i, 0)           # equiv in (i, 0)
190 NEXT i
200 PUT (nspec, 0)               # number of species in (0)
210 PUT (sites, 1)               # moles of sites stored in (1)
230 RESTORE 10
240 READ nspec
250 FOR i = 1 to nspec
260   READ spec$, equiv
#     log eq fraction (i, 1)
270   if (KIN(spec$) > 0) then PUT(LOG10(equiv*KIN(spec$)/sites), i, 1) else PUT (-99, i, 1)
280 NEXT i

300 REM Calculate SR for reaction
310 if (M <= 0) then goto 600
320 RESTORE 20
330 READ nspec, spec$, logk, n
340 q = GET(nspec, 1)
360 FOR i = 1 to n
370   READ s$, c
380   q = q + LA(s$) * c
390 NEXT i
410 q = q - GET(nspec, 0)*GET(1, 1)                  # subtract log_master_frac
420 satrat = 10^(q - logk)
430 PUT (q - logk, nspec, 2)                         # log SR in (i, 2)
440 rate = krate*(1-satrat)
450 moles = rate*TIME
460 GOTO 1000

600 REM Calculate rate if KIN is <=0
610 rate = krate
620 moles = rate*TIME
630 GOTO 1000

1000 REM save rate
1010 SAVE -moles
1020 PUT(GET(nspec,0)*moles, nspec, 3)                # delta equivs in (i,3)
-end

MgX2       # species 3
-start
# number of species, name of species, log K, number of species in reaction, reaction
20 DATA 3, "MgX2", 0.6, 2, "Na+", 2, "Mg+2", -1
30 krate = PARM(1)/(24*3600) 

300 REM Calculate SR for reaction
310 if (M <= 0) then goto 600
320 RESTORE 20
330 READ nspec, spec$, logk, n
340 q = GET(nspec, 1)
360 FOR i = 1 to n
370   READ s$, c
380   q = q + LA(s$) * c
390 NEXT i
410 q = q - GET(nspec, 0)*GET(1, 1)                  # subtract log_master_frac
420 satrat = 10^(q - logk)
430 PUT (q - logk, nspec, 2)                         # log SR in (i, 2)
440 rate = krate*(1-satrat)
450 moles = rate*TIME
460 GOTO 1000

600 REM Calculate rate if KIN is <=0
610 rate = krate
620 moles = rate*TIME
630 GOTO 1000

1000 REM save rate
1010 SAVE -moles
1020 PUT(GET(nspec,0)*moles, nspec, 3)                # delta equivs in (i,3)
-end

KX       # species 4
-start
# number of species, name of species, log K, number of species in reaction, reaction
20 DATA 4, "KX", 0.7, 2, "Na+", 1, "K+", -1
30 krate = PARM(1)/(24*3600) 

300 REM Calculate SR for reaction
310 if (M <= 0) then goto 600
320 RESTORE 20
330 READ nspec, spec$, logk, n
340 q = GET(nspec, 1)
360 FOR i = 1 to n
370   READ s$, c
380   q = q + LA(s$) * c
390 NEXT i
410 q = q - GET(nspec, 0)*GET(1, 1)                  # subtract log_master_frac
420 satrat = 10^(q - logk)
430 PUT (q - logk, nspec, 2)                         # log SR in (i, 2)
440 rate = krate*(1-satrat)
450 moles = rate*TIME
460 GOTO 1000

600 REM Calculate rate if KIN is <=0
610 rate = krate
620 moles = rate*TIME
630 GOTO 1000

1000 REM save rate
1010 SAVE -moles
1020 PUT(GET(nspec,0)*moles, nspec, 3)                # delta equivs in (i,3)
-end

HX       # species 5
-start
# number of species, name of species, log K, number of species in reaction, reaction
20 DATA 5, "HX", 1.0, 2, "Na+", 1, "H+", -1
30 krate = PARM(1)/(24*3600) 

300 REM Calculate SR for reaction
310 if (M <= 0) then goto 600
320 RESTORE 20
330 READ nspec, spec$, logk, n
340 q = GET(nspec, 1)
360 FOR i = 1 to n
370   READ s$, c
380   q = q + LA(s$) * c
390 NEXT i
410 q = q - GET(nspec, 0)*GET(1, 1)                  # subtract log_master_frac
420 satrat = 10^(q - logk)
430 PUT (q - logk, nspec, 2)                         # log SR in (i, 2)
440 rate = krate*(1-satrat)
450 moles = rate*TIME
460 GOTO 1000

600 REM Calculate rate if KIN is <=0
610 rate = krate
620 moles = rate*TIME
630 GOTO 1000

1000 REM save rate
1010 SAVE -moles
1020 PUT(GET(nspec,0)*moles, nspec, 3)                # delta equivs in (i,3)
-end

NaX       # species 1
-start
10 numspec = get(0)
20 moles = 0
30 FOR i = 2 to numspec
40  moles = moles + GET(i, 3)
50 NEXT i
60 SAVE moles
-end

SOLUTION
	pH  7
	-pe 10
        Ca 10
	Mg 10
	K  10
	Na 10
	Cl 10 charge
END
USE solution 1
EXCHANGE
	CaX2  0
	MgX2  0
	KX    0
	NaX   1e-3
END

USE solution 1
KINETICS
	-cvode
#	-step 10000 in 1 steps
	-step 20 in 10 steps
#
# Be sure to have CaX2 first so its rates expression is run first
#
     CaX2
	  -formula   Ca  1  
	  -parm   1           # rate constant in per day
          -M 0
     MgX2
	  -formula   Mg  1  
	  -parm   1           # rate constant in per day
          -M 0
     KX
	  -formula   K  1  
	  -parm   1           # rate constant in per day
          -M 0
     HX
	  -formula   H  1  
	  -parm   1           # rate constant in per day
          -M 0
#
# Be sure to have NaX last so its rates expression is run last
#
     NaX
	  -formula   Na  1 
          -M 1e-3


INCREMENTAL_REACTIONS
PRINT
	-warnings 1
USER_PRINT
10 sites = GET(1)
20 print "Total equivalents:         ", sites
40 print "equiv frac NaX:            ", 10^get(1,1)
50 print "equiv frac CaX2:           ", 10^get(2,1)
60 print "equiv frac MgX2:           ", 10^get(3,1)
70 print "equiv frac KX:             ", 10^get(4,1)
80 print "equiv frac HX:             ", 10^get(5,1)
SELECTED_OUTPUT
	-file kinex.sel
	-reset false
	-step
USER_PUNCH
-heading Na_eq_frac Ca_eq_frac Mg_eq_frac K_eq_frac H_eq_frac
40 PUNCH 10^get(1,1)
50 PUNCH 10^get(2,1)
60 PUNCH 10^get(3,1)
70 PUNCH 10^get(4,1)
80 PUNCH 10^get(5,1)
END
